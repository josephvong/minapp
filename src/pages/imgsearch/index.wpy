
<template>
  <view class="img-search-page">
    <view class="cropper-buttons">
        <view
                class="upload"
                @tap="uploadTap">
            上传图片
        </view>
        <view
                class="getCropperImage"
                @tap="getCropperImage">
            生成图片
        </view>
    </view>
     <import src="./cropper/we-cropper.wxml" /> 
     <template is="we-cropper" data="{{...cropperOpt}}"/>
    <!-- <template  data="{{...cropperOpt}}">
      <canvas
        class="cropper"
        disable-scroll="true"
        bindtouchstart="touchStart"
        bindtouchmove="touchMove"
        bindtouchend="touchEnd"
        style="width:{{width}}px;height:{{height}}px;background-color: rgba(0, 0, 0, 0.8)"
        canvas-id="{{id}}">
      </canvas>
    </template> -->
  </view>
</template>

<script>
  import wepy from 'wepy' 
  import WeCropper from './cropper/we-cropper.js'
  const device = wx.getSystemInfoSync() // 获取设备信息
  const width = device.windowWidth // 示例为一个与屏幕等宽的正方形裁剪框
  const height = width

  export default class imgSearch extends wepy.page {
    config = {
      navigationBarTitleText: '酒标搜索'

    }

    components = {
       
    }

    //mixins = [testMixin]

    data = {
      cropperOpt : {
        id: 'cropper',
        width,  // 画布宽度
        height, // 画布高度
        scale: 2.5, // 最大缩放倍数
        zoom: 8, // 缩放系数
        cut: {
          x: (width - 200) / 2, // 裁剪框x轴起点
          y: (width - 200) / 2, // 裁剪框y轴期起点
          width: 200, // 裁剪框宽度
          height: 200 // 裁剪框高度
        }
      }
    }

    computed = {
       
    } 

    methods = {
      uploadTap () {
        const self = this

        wx.chooseImage({
          count: 1, // 默认9
          sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
          sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
          success (res) {
            const src = res.tempFilePaths[0]
            console.log(src) 
            self.wecropper.pushOrign(src)
          }
        })
      },

      getCropperImage () {
        this.wecropper.getCropperImage((src) => {
          if (src) {
            console.log(src)
            wx.previewImage({
              current: '', // 当前显示图片的http链接
              urls: [src] // 需要预览的图片http链接列表
            })
          } else {
            console.log('获取图片地址失败，请稍后重试')
          }
        })
       }
       
    }

    events = {
       
    }

    watch = {
       
    }

    events = {
       
    }

    onLoad() {
      const { cropperOpt }  = this.data
      this.wecropper = new WeCropper(cropperOpt)
            .on('ready', (ctx) => {
                console.log(`wecropper is ready for work!`)
            })
            .on('beforeImageLoad', (ctx) => {
                console.log(`before picture loaded, i can do something`)
                console.log(`current canvas context: ${ctx}`)
                wx.showToast({
                    title: '上传中',
                    icon: 'loading',
                    duration: 20000
                })
            })
            .on('imageLoad', (ctx) => {
                console.log(`picture loaded`)
                console.log( ctx )
                wx.hideToast()
            })
            .on('beforeDraw', (ctx, instance) => {
              console.log(`before canvas draw,i can do something`)
              console.log(`current canvas context:`, ctx)
            })
            .updateCanvas()    
      
    }
  }
</script>

<style lang="stylus">
.img-search-page
  padding-top 100rpx
        
            
</style>
