
<template>
  <view class="img-search-page"> 
    <!-- <view @tap="imgUpload" class="preview-img" style="background-image:url({{searchUrl}})"></view> -->
    <image mode="aspectFit" class="preview-img" src="{{searchUrl}}"></image>
    <view @tap="imgUpload" class="re-upload" >重新选择图片</view>

    <view class="result-wrap">
      <view class="fail-notic" style="display:{{failNotic?'block':'none'}}">
      搜索结果为0，搜索请求信息：{{failNotic}}
      </view>
      <ul class="result-list" wx:if="{{resultList.length}}" > 
        <repeat for="{{resultList}}" key="index" index="index" item="item"> 
          <listItem :itemData="item" :listIndex="index+1" :listType="listType"></listItem> 
        </repeat> 
      </ul>
    </view>

    <wepyCropper :params.sync="clipParams"></wepyCropper>
  </view>
</template>

<script>
  import wepy from 'wepy'  
  import wepyCropper from 'wepy-cropper';
  import listItem from 'components/listItem/index'
  import {imgItemDataInit} from 'components/listItem/dataInit' 
  import {imgFileUpload, imgUrlSend, imgWineResult, recurImgSearch} from 'api/imgSearchApi/index'  // 拍照搜索数据接口函数
  export default class imgSearch extends wepy.page {
    config = {
      navigationBarTitleText: '酒标搜索' 
    }

    components = {
      wepyCropper,
      listItem
    }

    //mixins = [testMixin]

    data = {

      clipParams:{ // 切图控件 参数 
        src:'', //字符串, 图片path 必填
        mode:"rectangle", //默认rectangle 'quadrangle'并不返回图片，只返回在图片中的四个点，用于perspective correction
        sizeType:["compressed"],//数组,选填 ['original', 'compressed'], 默认original
      }, 
      searchUrl:'',   // 裁剪后的图片链接（tmp图片）

     
      failNotic:'',
      resultList:[],

      listType:'img'
    }

    computed = {
       
    } 

    methods = { 
      imgUpload(){
        this.searchUrl = ''
        this.clipParams.src= ''; 
        
        let chooseImg = new Promise((resolve,reject)=>{
          wx.chooseImage({
              count: 1, // 默认9
              sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
              sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
              success(res) {
                console.log(res)
                  resolve(res.tempFilePaths[0]);
              }
          }) 
        })
        chooseImg.then((path)=>{

          this.clipParams.src= path;
          this.$apply(); 
        })
      },

      async uploadSend(imgUrl,module){
        let staticUrl,searchId;
        let This = module
        
        This.resultList = []
        This.failNotic = ''
        This.$apply()

        wepy.showLoading({ title:'搜索结果中'}) // 开启loading
        
        try{ staticUrl = await imgFileUpload(imgUrl) }catch(err){
          wepy.hideLoading()
          This.failNotic = err
          This.$apply()  
          console.log('错误:'+ err) 
        }
        try{ searchId = await imgUrlSend(staticUrl) }catch(err){
          wepy.hideLoading()
          This.failNotic = err
          This.$apply()  
          console.log('错误:'+ err) 
        } 
         
        recurImgSearch(searchId).then((res)=>{  
          wepy.hideLoading()
          let tempList = res.wine_list.map((item)=>{
            return imgItemDataInit(item)
          })
          console.log(tempList)
          This.resultList = tempList
          This.$apply() 
        }).catch((err)=>{
          //console.log('this catch')
          //console.log(err)
          wepy.hideLoading()
          This.failNotic = err  
          This.$apply()  
        })
           
      },

       

    } 

    watch = {
      searchUrl(newVal){
        if(newVal){
          this.methods.uploadSend(newVal,this)
        }
         
      }
    }

    events = {
      wepyCropperFinsh(path){ 
        this.searchUrl = path 
        this.$apply();
      }
    }

    onLoad() {
      //console.log(Toast)
      let chooseImg = new Promise((resolve,reject)=>{
        wx.chooseImage({
            count: 1, // 默认9
            sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
            sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
            success(res) {
                resolve(res.tempFilePaths[0]);
            }
        }) 
      })
      chooseImg.then((path)=>{
        this.clipParams.src= path;
        this.$apply(); 
      })
      //this.methods.imgUpload(this)
    }
  }
</script>

<style lang="stylus">
.img-search-page
  color black
  .preview-img
    display block
    width 50%
    height 400rpx
    margin 0 auto
    padding 10rpx
    border 1px solid gray
    border-radius 10rpx
     
  .re-upload
    display block
    width 40%
    height 60rpx
    line-height 60rpx
    margin 30rpx auto
    text-align center
    font-size 28rpx
    font-weight 700
    color white
    border-radius 30rpx
    background red
  .result-wrap
    width 100%
    padding 20rpx
    .fail-notic
      text-align center    
    .result-list
      display block
      background #f7f7f7
      /*li.precise
        background linear-gradient*/
        
</style>
