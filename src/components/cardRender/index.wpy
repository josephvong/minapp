
<template>
  <view style="position:fixed; top:-999px"> 
    <canvas canvas-id="cardRender"  style=" width:{{canvasData.w}}px;height:{{canvasData.h}}px;"></canvas>
  </view> 
</template>

<script>
  import wepy from 'wepy'  
  
  //const IMG = 'https://staticfs2.9kacha.com/image/b1fa6124076bea67d428d05f2a4ccce8/thumb'  
  //const LOGO = './logo.png'
  const MaxRange = 300
  const Margin = 10
 
  export default class cardRender extends wepy.component { 
    props = {
       
    } 
    components = { 
    }

    //mixins = [testMixin]

    data = {
      canvasData: {
        w:MaxRange + Margin*2,
        h:450
      },

    }

    computed = {
       
    } 

    methods = {
      imgScalCalc(img){
        return wepy.getImageInfo({src:img}).then((res)=>{
          let imgscal = {}
          if(res.width>res.height && res.width>=MaxRange){ // 宽图 
            imgscal.img_w = MaxRange
            imgscal.img_h =  Math.floor(MaxRange/res.width * res.height)
            imgscal.img_x = 0 + Margin
            imgscal.img_y = MaxRange/2 - Math.floor(imgscal.img_h/2) + Margin
          }else if(res.width<res.height && res.height>=MaxRange){ // 长图
            imgscal.img_h = MaxRange
            imgscal.img_w = Math.floor(MaxRange/res.height * res.width)
            imgscal.img_y = 0 + Margin
            imgscal.img_x = MaxRange/2 - Math.floor(imgscal.img_w/2) + Margin
          }else{
            imgscal.img_w = res.width
            imgscal.img_h = res.height
            imgscal.img_y = MaxRange/2- Math.floor(imgscal.img_h/2) + Margin
            imgscal.img_x = MaxRange/2 - Math.floor(imgscal.img_w/2) + Margin
          }
          return imgscal 
        })

      },
       
      async cardRender(info){
        
        let imgData = await this.methods.imgScalCalc(info.url)
        console.log(imgData)
        let canW = this.canvasData.w
        let canH = this.canvasData.h
        
        let ctx = wx.createCanvasContext('cardRender')
         
        ctx.setFillStyle('white')
        ctx.fillRect(0,0,canW,canH) 
         
        ctx.drawImage(info.url,imgData.img_x,imgData.img_y,imgData.img_w,imgData.img_h)
         

        ctx.setFillStyle('black')
        ctx.setFontSize(16)
        ctx.setTextAlign('center')
        ctx.setTextBaseline('top') 
        ctx.fillText(info.name_ch, canW/2, MaxRange + Margin*2)
        ctx.setFontSize(14)
        ctx.fillText(info.name_en, canW/2, MaxRange + Margin*4)
        ctx.drawImage(info.logo,(MaxRange/2-25)+Margin,MaxRange+Margin*7,50,50)
        ctx.draw(false,()=>{ 
          wx.canvasToTempFilePath({
            x:0,
            y:0,
            canvasId:'cardRender',
            success: function(res) {
              console.log(res.tempFilePath)
              wx.previewImage({urls:[res.tempFilePath]})
            }
          })
        })
      }
    }

    events = {
       
    }

    watch = {
       
    }

    events = {
       
    }

    onLoad() {  
      
    }

    onHide(){
       
    }

    onUnload(){
      
    }
  }
</script>

<style lang="stylus">
.card-generate-page
  color black
 
                     
</style>
