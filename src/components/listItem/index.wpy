<style lang="stylus"> 
.list-item
  display:block;
  padding 20rpx  
  background white
  .item-wrap
    display flex
    align-items center
    flex-flow row no-wrap
    .left-icon
      flex 0 0 25%
      wdith 25%
      height:200rpx;
      margin-right 20rpx 
      border 1rpx solid #f7f7f7
      border-radius 5rpx 
      background no-repeat
      background-size contain
      background-position center
    .right-content
      flex 1
      width auto
      padding-right 10rpx
      min-width 0
      height 200rpx
      over-flow hidden 
      .title_cn
        line-height 36rpx
        font-size 32rpx
        font-weight 700
        over-flow hidden
      .title_en
        line-height 30rpx
        font-size 28rpx
        
      
      
      
</style>

<template>
<li class="list-item">
  <view class="item-wrap">
    <view class="left-icon" style="background-image:url('{{itemData.pic_url}}')"
    >
      <!-- <image style="width:100%;" src="{{itemData.pic_url}}" alt=""></image> --> 
    </view>
    <view class="right-content"> 
      <view class="title_cn" wx:if="itemData.name.name_ch || itemData.name">
      {{itemData.name.name_ch || itemData.name}}
      </view>
      <view class="title_en" wx:if="itemData.name.name_en || itemData.name_en">
      {{itemData.name.name_en || itemData.name_en}}
      </view>
      <!-- <view class="title_cn" wx:if="wineName.name_ch">
        {{wineName.name_ch}}
      </view>
      <view class="title_en" wx:if="wineName.name_en">
        {{wineName.name_en}}
      </view>  -->  
    </view>
   
  </view>
</li> 
</template>

<script>
  import wepy from 'wepy'  
  export default class listItem extends wepy.component {
    props = {
      itemData:{}
    }

    components = { 
    } 

    data = {
      //wineName:{} 
    }

    computed = {
      /*wineNameInit(){
        let wine_name = {};
        if(this.itemData.name && typeof(this.itemData.name)=="object"){
          wine_name = this.itemData.name
        }else{
          wine_name.name_ch = this.itemData.name
          wine_name.name_en = this.itemData.name_en
        }
        return wine_name
      }*/
    } 

    methods = {
      /*wineNameInit(){
        let wine_name = {};
        if(this.itemData.name && typeof(this.itemData.name)=="object"){
          wine_name = this.itemData.name
        }else{
          wine_name.name_ch = this.itemData.name
          wine_name.name_en = this.itemData.name_en
        }
        this.wineName = wine_name
        this.$apply()
      } */ 
    }

    events = {

    }

    watch = {
      
    }

    events = {
       
    }

    onLoad() {
      //this.methods.wineNameInit()
    }
  }
</script>


